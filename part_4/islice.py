"""
islice(iterable, start, stop[, step]):
Здійснює "поетапне" звертання до ітерабельного об'єкта, подібно до slice для списків.
"""

from itertools import islice

numbers = range(10)

sliced_numbers = list(islice(numbers, 2, 8, 2))

print(sliced_numbers)
# Виведення: [2, 4, 6, 8]

"""
Функція islice з модуля itertools має декілька переваг, особливо при роботі з великими послідовностями чи потоками 
даних:
1. Ліниве вироблення: islice є лінивою функцією, що означає, що вона виробляє елементи лише тоді, коли вони потрібні. 
Це особливо важливо при роботі з великими об'ємами даних, де не завжди потрібно витрачати ресурси на обробку всіх 
елементів наперед.
2. Швидкість та ефективність: Оскільки islice працює ліниво, вона може бути більш ефективною за стандартний підхід до 
вирізання срізу. Вона генерує елементи на льоту, що дозволяє зекономити пам'ять і зменшити обчислювальні затрати.
3. Підтримка потоків даних: Якщо ви працюєте з потоком даних, islice може допомогти вам ефективно обробляти лише ті 
частини послідовності, які вам дійсно потрібні, не завантажуючи всю послідовність в пам'ять.
4. Динамічні срізи: islice дозволяє здійснювати динамічні срізи, адже ви можете передавати змінні як аргументи для 
параметрів start, stop та step. Це дозволяє створювати срізи залежно від умов та потреб вашого коду.

Однак важливо відзначити, що вибір між islice та стандартним зрізом ([start:stop:step]) залежить від конкретної задачі 
та вимог вашого коду. У деяких випадках islice може бути більш зручним, особливо коли мається на увазі ліниве 
вироблення та оптимізація ресурсів.
"""
